// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`dark theme add mode should match snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNCSafeAreaView
    edges={
      {
        "bottom": "additive",
        "left": "additive",
        "right": "additive",
        "top": "additive",
      }
    }
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      onLayout={[Function]}
      style={
        [
          {
            "alignItems": "center",
            "backgroundColor": "#111",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "flex-start",
            "paddingBottom": 20,
            "paddingLeft": 20,
            "paddingRight": 20,
            "paddingTop": 40,
          },
          {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <View
        style={
          {
            "backgroundColor": "transparent",
            "display": "flex",
            "gap": 20,
            "width": "100%",
          }
        }
      >
        <View
          style={
            {
              "backgroundColor": "transparent",
              "gap": 4,
            }
          }
        >
          <Text
            disabled={false}
            style={
              {
                "color": "rgb(255, 255, 255)",
                "fontSize": 16,
                "marginLeft": 5,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
              }
            }
          >
            Runner Number
          </Text>
          <TextInput
            clearButtonMode="while-editing"
            keyboardType="number-pad"
            onChangeText={[Function]}
            onSubmitEditing={[Function]}
            returnKeyType="done"
            style={
              {
                "backgroundColor": "rgba(255,255,255, .1)",
                "borderBottomLeftRadius": 4,
                "borderBottomRightRadius": 4,
                "borderTopLeftRadius": 4,
                "borderTopRightRadius": 4,
                "color": "rgb(255, 255, 255)",
                "fontSize": 16,
                "paddingBottom": 15,
                "paddingLeft": 15,
                "paddingRight": 15,
                "paddingTop": 15,
                "width": "100%",
              }
            }
            testID="runnerIdInput"
            value=""
          />
        </View>
        <View
          style={
            {
              "backgroundColor": "transparent",
              "gap": 4,
            }
          }
        >
          <Text
            style={
              {
                "color": "rgb(255, 255, 255)",
                "fontSize": 16,
                "marginLeft": 5,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
              }
            }
          >
            Name
          </Text>
          <TextInput
            autoCapitalize="words"
            clearButtonMode="while-editing"
            onChangeText={[Function]}
            onSubmitEditing={[Function]}
            returnKeyType="next"
            style={
              {
                "backgroundColor": "rgba(255,255,255, .1)",
                "borderBottomLeftRadius": 4,
                "borderBottomRightRadius": 4,
                "borderTopLeftRadius": 4,
                "borderTopRightRadius": 4,
                "color": "rgb(255, 255, 255)",
                "fontSize": 16,
                "paddingBottom": 15,
                "paddingLeft": 15,
                "paddingRight": 15,
                "paddingTop": 15,
                "width": "100%",
              }
            }
            testID="runnerNameInput"
            textContentType="name"
            value=""
          />
        </View>
        <View
          style={
            {
              "backgroundColor": "transparent",
              "flexDirection": "row",
              "justifyContent": "space-around",
            }
          }
        >
          <View
            accessibilityRole="button"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                [
                  {},
                ]
              }
            >
              <Text
                style={
                  [
                    {
                      "color": "#007AFF",
                      "fontSize": 18,
                      "margin": 8,
                      "textAlign": "center",
                    },
                  ]
                }
              >
                Submit
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaView>
</RNCSafeAreaProvider>
`;

exports[`dark theme edit mode should match snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNCSafeAreaView
    edges={
      {
        "bottom": "additive",
        "left": "additive",
        "right": "additive",
        "top": "additive",
      }
    }
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      onLayout={[Function]}
      style={
        [
          {
            "alignItems": "center",
            "backgroundColor": "#111",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "flex-start",
            "paddingBottom": 20,
            "paddingLeft": 20,
            "paddingRight": 20,
            "paddingTop": 40,
          },
          {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <View
        style={
          {
            "backgroundColor": "transparent",
            "display": "flex",
            "gap": 20,
            "width": "100%",
          }
        }
      >
        <View
          style={
            {
              "backgroundColor": "transparent",
              "gap": 4,
            }
          }
        >
          <Text
            disabled={true}
            style={
              {
                "color": "rgb(127, 127, 127)",
                "fontSize": 16,
                "marginLeft": 5,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
              }
            }
          >
            Runner Number
          </Text>
          <View
            style={
              {
                "backgroundColor": "rgba(255, 255, 255, .05)",
                "borderBottomLeftRadius": 4,
                "borderBottomRightRadius": 4,
                "borderTopLeftRadius": 4,
                "borderTopRightRadius": 4,
                "paddingBottom": 15,
                "paddingLeft": 15,
                "paddingRight": 15,
                "paddingTop": 15,
                "width": "100%",
              }
            }
          >
            <Text
              style={
                {
                  "color": "rgb(127, 127, 127)",
                  "fontSize": 16,
                }
              }
              testID="runnerIdInput"
            />
          </View>
        </View>
        <View
          style={
            {
              "backgroundColor": "transparent",
              "gap": 4,
            }
          }
        >
          <Text
            style={
              {
                "color": "rgb(255, 255, 255)",
                "fontSize": 16,
                "marginLeft": 5,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
              }
            }
          >
            Name
          </Text>
          <TextInput
            autoCapitalize="words"
            clearButtonMode="while-editing"
            onChangeText={[Function]}
            onSubmitEditing={[Function]}
            returnKeyType="next"
            style={
              {
                "backgroundColor": "rgba(255,255,255, .1)",
                "borderBottomLeftRadius": 4,
                "borderBottomRightRadius": 4,
                "borderTopLeftRadius": 4,
                "borderTopRightRadius": 4,
                "color": "rgb(255, 255, 255)",
                "fontSize": 16,
                "paddingBottom": 15,
                "paddingLeft": 15,
                "paddingRight": 15,
                "paddingTop": 15,
                "width": "100%",
              }
            }
            testID="runnerNameInput"
            textContentType="name"
            value=""
          />
        </View>
        <View
          style={
            {
              "backgroundColor": "transparent",
              "gap": 4,
            }
          }
        >
          <Text
            style={
              {
                "color": "rgb(255, 255, 255)",
                "fontSize": 16,
                "marginLeft": 5,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
              }
            }
          >
            Lap Count
          </Text>
          <TextInput
            clearButtonMode="while-editing"
            keyboardType="number-pad"
            onChangeText={[Function]}
            onSubmitEditing={[Function]}
            returnKeyType="done"
            style={
              {
                "backgroundColor": "rgba(255,255,255, .1)",
                "borderBottomLeftRadius": 4,
                "borderBottomRightRadius": 4,
                "borderTopLeftRadius": 4,
                "borderTopRightRadius": 4,
                "color": "rgb(255, 255, 255)",
                "fontSize": 16,
                "paddingBottom": 15,
                "paddingLeft": 15,
                "paddingRight": 15,
                "paddingTop": 15,
                "width": "100%",
              }
            }
            testID="lapCountInput"
            value="0"
          />
        </View>
        <View
          style={
            {
              "backgroundColor": "transparent",
              "flexDirection": "row",
              "justifyContent": "space-around",
            }
          }
        >
          <View
            accessibilityRole="button"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                [
                  {},
                ]
              }
            >
              <Text
                style={
                  [
                    {
                      "color": "#007AFF",
                      "fontSize": 18,
                      "margin": 8,
                      "textAlign": "center",
                    },
                    {
                      "color": "red",
                    },
                  ]
                }
              >
                Delete
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="button"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                [
                  {},
                ]
              }
            >
              <Text
                style={
                  [
                    {
                      "color": "#007AFF",
                      "fontSize": 18,
                      "margin": 8,
                      "textAlign": "center",
                    },
                  ]
                }
              >
                Submit
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaView>
</RNCSafeAreaProvider>
`;

exports[`light theme add mode should match snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNCSafeAreaView
    edges={
      {
        "bottom": "additive",
        "left": "additive",
        "right": "additive",
        "top": "additive",
      }
    }
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      onLayout={[Function]}
      style={
        [
          {
            "alignItems": "center",
            "backgroundColor": "rgb(255, 255, 255)",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "flex-start",
            "paddingBottom": 20,
            "paddingLeft": 20,
            "paddingRight": 20,
            "paddingTop": 40,
          },
          {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <View
        style={
          {
            "backgroundColor": "transparent",
            "display": "flex",
            "gap": 20,
            "width": "100%",
          }
        }
      >
        <View
          style={
            {
              "backgroundColor": "transparent",
              "gap": 4,
            }
          }
        >
          <Text
            disabled={false}
            style={
              {
                "color": "#111",
                "fontSize": 16,
                "marginLeft": 5,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
              }
            }
          >
            Runner Number
          </Text>
          <TextInput
            clearButtonMode="while-editing"
            keyboardType="number-pad"
            onChangeText={[Function]}
            onSubmitEditing={[Function]}
            returnKeyType="done"
            style={
              {
                "backgroundColor": "rgba(0, 0, 0, .07)",
                "borderBottomLeftRadius": 4,
                "borderBottomRightRadius": 4,
                "borderTopLeftRadius": 4,
                "borderTopRightRadius": 4,
                "color": "#111",
                "fontSize": 16,
                "paddingBottom": 15,
                "paddingLeft": 15,
                "paddingRight": 15,
                "paddingTop": 15,
                "width": "100%",
              }
            }
            testID="runnerIdInput"
            value=""
          />
        </View>
        <View
          style={
            {
              "backgroundColor": "transparent",
              "gap": 4,
            }
          }
        >
          <Text
            style={
              {
                "color": "#111",
                "fontSize": 16,
                "marginLeft": 5,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
              }
            }
          >
            Name
          </Text>
          <TextInput
            autoCapitalize="words"
            clearButtonMode="while-editing"
            onChangeText={[Function]}
            onSubmitEditing={[Function]}
            returnKeyType="next"
            style={
              {
                "backgroundColor": "rgba(0, 0, 0, .07)",
                "borderBottomLeftRadius": 4,
                "borderBottomRightRadius": 4,
                "borderTopLeftRadius": 4,
                "borderTopRightRadius": 4,
                "color": "#111",
                "fontSize": 16,
                "paddingBottom": 15,
                "paddingLeft": 15,
                "paddingRight": 15,
                "paddingTop": 15,
                "width": "100%",
              }
            }
            testID="runnerNameInput"
            textContentType="name"
            value=""
          />
        </View>
        <View
          style={
            {
              "backgroundColor": "transparent",
              "flexDirection": "row",
              "justifyContent": "space-around",
            }
          }
        >
          <View
            accessibilityRole="button"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                [
                  {},
                ]
              }
            >
              <Text
                style={
                  [
                    {
                      "color": "#007AFF",
                      "fontSize": 18,
                      "margin": 8,
                      "textAlign": "center",
                    },
                  ]
                }
              >
                Submit
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaView>
</RNCSafeAreaProvider>
`;

exports[`light theme edit mode should match snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNCSafeAreaView
    edges={
      {
        "bottom": "additive",
        "left": "additive",
        "right": "additive",
        "top": "additive",
      }
    }
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      onLayout={[Function]}
      style={
        [
          {
            "alignItems": "center",
            "backgroundColor": "rgb(255, 255, 255)",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "flex-start",
            "paddingBottom": 20,
            "paddingLeft": 20,
            "paddingRight": 20,
            "paddingTop": 40,
          },
          {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <View
        style={
          {
            "backgroundColor": "transparent",
            "display": "flex",
            "gap": 20,
            "width": "100%",
          }
        }
      >
        <View
          style={
            {
              "backgroundColor": "transparent",
              "gap": 4,
            }
          }
        >
          <Text
            disabled={true}
            style={
              {
                "color": "rgb(127, 127, 127)",
                "fontSize": 16,
                "marginLeft": 5,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
              }
            }
          >
            Runner Number
          </Text>
          <View
            style={
              {
                "backgroundColor": "rgba(0, 0, 0, .035)",
                "borderBottomLeftRadius": 4,
                "borderBottomRightRadius": 4,
                "borderTopLeftRadius": 4,
                "borderTopRightRadius": 4,
                "paddingBottom": 15,
                "paddingLeft": 15,
                "paddingRight": 15,
                "paddingTop": 15,
                "width": "100%",
              }
            }
          >
            <Text
              style={
                {
                  "color": "rgb(127, 127, 127)",
                  "fontSize": 16,
                }
              }
              testID="runnerIdInput"
            />
          </View>
        </View>
        <View
          style={
            {
              "backgroundColor": "transparent",
              "gap": 4,
            }
          }
        >
          <Text
            style={
              {
                "color": "#111",
                "fontSize": 16,
                "marginLeft": 5,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
              }
            }
          >
            Name
          </Text>
          <TextInput
            autoCapitalize="words"
            clearButtonMode="while-editing"
            onChangeText={[Function]}
            onSubmitEditing={[Function]}
            returnKeyType="next"
            style={
              {
                "backgroundColor": "rgba(0, 0, 0, .07)",
                "borderBottomLeftRadius": 4,
                "borderBottomRightRadius": 4,
                "borderTopLeftRadius": 4,
                "borderTopRightRadius": 4,
                "color": "#111",
                "fontSize": 16,
                "paddingBottom": 15,
                "paddingLeft": 15,
                "paddingRight": 15,
                "paddingTop": 15,
                "width": "100%",
              }
            }
            testID="runnerNameInput"
            textContentType="name"
            value=""
          />
        </View>
        <View
          style={
            {
              "backgroundColor": "transparent",
              "gap": 4,
            }
          }
        >
          <Text
            style={
              {
                "color": "#111",
                "fontSize": 16,
                "marginLeft": 5,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
              }
            }
          >
            Lap Count
          </Text>
          <TextInput
            clearButtonMode="while-editing"
            keyboardType="number-pad"
            onChangeText={[Function]}
            onSubmitEditing={[Function]}
            returnKeyType="done"
            style={
              {
                "backgroundColor": "rgba(0, 0, 0, .07)",
                "borderBottomLeftRadius": 4,
                "borderBottomRightRadius": 4,
                "borderTopLeftRadius": 4,
                "borderTopRightRadius": 4,
                "color": "#111",
                "fontSize": 16,
                "paddingBottom": 15,
                "paddingLeft": 15,
                "paddingRight": 15,
                "paddingTop": 15,
                "width": "100%",
              }
            }
            testID="lapCountInput"
            value="0"
          />
        </View>
        <View
          style={
            {
              "backgroundColor": "transparent",
              "flexDirection": "row",
              "justifyContent": "space-around",
            }
          }
        >
          <View
            accessibilityRole="button"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                [
                  {},
                ]
              }
            >
              <Text
                style={
                  [
                    {
                      "color": "#007AFF",
                      "fontSize": 18,
                      "margin": 8,
                      "textAlign": "center",
                    },
                    {
                      "color": "red",
                    },
                  ]
                }
              >
                Delete
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="button"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                [
                  {},
                ]
              }
            >
              <Text
                style={
                  [
                    {
                      "color": "#007AFF",
                      "fontSize": 18,
                      "margin": 8,
                      "textAlign": "center",
                    },
                  ]
                }
              >
                Submit
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaView>
</RNCSafeAreaProvider>
`;
